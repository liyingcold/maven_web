<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.pojo.User">
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Long" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"  />
      <arg column="sex" typeHandler="com.ssm.util.SexEnumTypeHandler"  />
      <arg column="mobile" jdbcType="VARCHAR" javaType="java.lang.String"  />
      <arg column="tel" jdbcType="VARCHAR" javaType="java.lang.String"  />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"   />
      <arg column="note" jdbcType="VARCHAR" javaType="java.lang.String"   />
    </constructor>
    <!--与用户信息表，一对一级联-->
    <association property="userInfo" column="user_id" fetchType="lazy" select="com.ssm.dao.UserInfoMapper.selectByPrimaryKey"/>
    <!--与角色role表，一对多级联-->
    <collection property="roleList" column="id" fetchType="lazy" select="com.ssm.dao.RoleMapper.selectByPrimaryKey"/>
    <!--鉴别器-->
    <discriminator javaType="int" column="sex">
      <case value="1" resultMap="maleHealthMapper"/>
      <case value="0" resultMap="femaleHealthMapper"/>
    </discriminator>
  </resultMap>
  <resultMap id="femaleHealthMapper" type="com.ssm.pojo.FemaleHealth" extends="BaseResultMap">
    <association property="femaleHealth" column="user_id" select="com.ssm.dao.FemaleHealthMapper.selectByPrimaryKey"/>
  </resultMap>
  <resultMap id="maleHealthMapper" type="com.ssm.pojo.MaleHealth" extends="BaseResultMap">
    <association property="maleHealth" column="user_id" select="com.ssm.dao.MaleHealthMapper.selectByPrimaryKey"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, password, sex, mobile, tel, email, note
  </sql>
  <!--查询用户基础信息-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long"  resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.User" >
    insert into t_user (id, user_name, password, 
      sex, mobile, tel, email, 
      note)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkUserName" resultType="int" parameterType="String">
    select count (1)
    from t_user
    where user_name=#{username}
  </select>
  <select id="checkEmail" resultType="int" parameterType="String">
    select count(1)
    from t_user
    where email=#{email}
  </select>

  <select id="selectLogin"  parameterType="map"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where user_name=#{username}
    and password=#{password}
  </select>

  <!--<update id="updatePasswordByUserName" parameterType="map">-->
    <!--update t_user-->
    <!--set password=#{password},note=now()-->
    <!--where user_name=#{username}-->
  <!--</update>-->

  <!--<select id="checkPasswordByUserId" resultType="int" parameterType="map">-->
    <!--select count(1)-->
    <!--from t_user-->
    <!--where id=#{userId}-->
    <!--and password=#{password}-->
  <!--</select>-->

  <!--<select id="checkEmailByUserId" resultType="int" parameterType="map">-->
    <!--select count(1)-->
    <!--from t_user-->
    <!--where email=#{email}-->
    <!--and id!=#{userId}-->
  <!--</select>-->

</mapper>