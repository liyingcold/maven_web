<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="head_image" javaType="_byte[]" jdbcType="LONGVARBINARY" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, note
  </sql>
  <sql id="Blob_Column_List">
    head_image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info (id, user_id, note, 
      head_image)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{headImage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="head_image" javaType="_byte[]" jdbcType="LONGVARBINARY" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, note
  </sql>
  <sql id="Blob_Column_List">
    head_image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info (id, user_id, note, 
      head_image)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{headImage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ssm.pojo.UserInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="INTEGER" />
      <arg column="note" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="head_image" javaType="_byte[]" jdbcType="LONGVARBINARY" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, note
  </sql>
  <sql id="Blob_Column_List">
    head_image
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info (id, user_id, note, 
      head_image)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{headImage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.UserInfo">
    insert into t_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.UserInfo">
    update t_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>